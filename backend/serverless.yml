service: gdg-joegon
frameworkVersion: "2 || 3"

plugins:
  - serverless-iam-roles-per-function

provider:
  # Stack settings
  name: aws
  stage: ${opt:stage, "dev"}
  region: ${opt:region, "ap-southeast-1"}
  profile: bot-steve
  deploymentMethod: direct
  deploymentBucket:
    name: gdg-joegon-sls-deployment

  # Function settings
  runtime: python3.8
  lambdaHashingVersion: 20201221
  memorySize: 128
  timeout: 10
  logRetentionInDays: 7

  # HTTP API settings
  httpApi:
    name: gdg-joegon

custom:
  shared:
    s3BucketJoegon: gdg-joegon

  dev:
    stageDashPrefix: dev-

package:
  patterns:
    - "!./**"
  individually: true

functions:
  hello:
    handler: functions/hello/handler.hello
    package:
      patterns:
        - functions/hello/**
    events:
      - httpApi:
          path: /
          method: GET

  analyse-pdf:
    handler: functions/analyse-pdf/main.main
    package:
      patterns:
        - functions/analyse-pdf/**
    environment:
      S3_BUCKET_JOEGON: ${self:custom.shared.s3BucketJoegon}
      # No need end with "/" because it is a folder prefix
      TEXTRACT_S3_OUTPUT_PREFIX: textract
    iamRoleStatements:
      - Effect: Allow
        Action:
          - textract:StartDocumentTextDetection
        Resource: "*"
      - Effect: Allow
        Action:
          - s3:Get*
          - s3:PutObject
        Resource: arn:aws:s3:::gdg-joegon/*
    events:
      - s3:
          bucket: ${self:custom.shared.s3BucketJoegon}
          existing: true
          event: s3:ObjectCreated:*
          rules:
            - prefix: resumes/

  # sync-resumes:
  #   handler: functions/sync-resumes/main.main
  #   package:
  #     patterns:
  #       - functions/sync-resumes/**
  #   environment:
  #     S3_BUCKET_JOEGON: ${self:custom.shared.s3BucketJoegon}
  #     AOS_JOEGON_ENDPOINT: !ImportValue AosJoegonEndpoint
  #   iamRoleStatements:
  #     - Effect: Allow
  #       Action:
  #         - s3:GetObject
  #       Resource: arn:aws:s3:::gdg-joegon/*
  #     - Effect: Allow
  #       Action:
  #         - es:ESHttpPost
  #       Resource: !Join ["/", [!ImportValue AosJoegonArn, "joegon-candidate/*"]]
  #   events:
  #     - s3:
  #         bucket: ${self:custom.shared.s3BucketJoegon}
  #         existing: true
  #         event: s3:ObjectCreated:*
  #         rules:
  #           - prefix: textract/
